#!/bin/bash

case "$1" in
  up)
    operation="up -d"
    ;;
  down)
    operation="down"
    ;;
  rm)
    ;;
  kill-all)
    docker stop $(docker ps -a -q)
    docker rm $(docker ps -a -q)
    docker rmi -f $(docker images -a -q)
    docker volume rm -f $(docker volume ls -q)
    exit 0
    ;;
  *)
    echo "Invalid operation."
    exit 1
    ;;
esac

case "$2" in
  mongo)
    service="./mongo/docker-compose.yml"
    dotenv="--env-file ./credentials/mongo.env"
    container="mongo"
    image="mongo"
    volumes="mongo_db mongo_configdb"
    networks="mongo_network"
    ;;
  mongo-express)
    service="./mongo-express/docker-compose.yml"
    dotenv="--env-file ./credentials/mongo.env --env-file ./credentials/mongo-express.env"
    container="mongo-express"
    image="mongo-express"
    ;;
  gitea)
    service="./gitea/docker-compose.yml"
    dotenv="--env-file ./credentials/gitea.env --env-file ./credentials/mariadb.env"
    container="gitea"
    image="gitea-gitea"
    volumes="gitea_config gitea_data gitea_var"
    ;;
  mariadb)
    service="./mariadb/docker-compose.yml"
    dotenv="--env-file ./credentials/mariadb.env"
    container="mariadb"
    image="mariadb-mariadb"
    volumes="mariadb_data"
    networks="mariadb_network"
    ;;
  *)
    echo "Invalid service."
    exit 1
    ;;
esac

if [[ "$1" == "up" || "$1" == "down" ]]; then
  cmd="docker compose -f $service $dotenv $operation"
elif [[ "$1" == "rm" ]]; then
  cmd="docker stop $container"
  cmd+="; docker rm $container"
  cmd+="; docker rmi -f $image"
  if [[ ! -z "$volumes" ]]; then
    cmd+="; docker volume rm -f $volumes"
  fi
  if [[ ! -z "$networks" ]]; then
    cmd+="; docker network rm $networks"
  fi
fi

eval $cmd